"""Dodajem novu tabelu

Revision ID: 80558b78e573
Revises: ea6eeb68b37b
Create Date: 2025-02-13 01:50:46.811879

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '80558b78e573'
down_revision: Union[str, None] = 'ea6eeb68b37b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('listing_history', 'listing_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('listing_history', 'price',
               existing_type=sa.NUMERIC(),
               nullable=True)
    op.alter_column('listing_history', 'changed_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('listing_history', 'change_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('listing_history', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_constraint('listing_history_listing_id_fkey', 'listing_history', type_='foreignkey')
    op.create_foreign_key(None, 'listing_history', 'listings', ['listing_id'], ['id'])
    op.alter_column('listings', 'owner_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('listings', 'source',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('listings', 'external_id',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('listings', 'title',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('listings', 'price',
               existing_type=sa.NUMERIC(),
               nullable=True)
    op.alter_column('listings', 'posted_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('listings', 'processed_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('listings', 'url',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('listings', 'status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    op.alter_column('listings', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('listings', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_constraint('listings_owner_id_fkey', 'listings', type_='foreignkey')
    op.create_foreign_key(None, 'listings', 'owners', ['owner_id'], ['id'])
    op.alter_column('owners', 'name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('owners', 'source',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('owners', 'external_id',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('owners', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('owners', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('owners', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('owners', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('owners', 'external_id',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('owners', 'source',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('owners', 'name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.drop_constraint(None, 'listings', type_='foreignkey')
    op.create_foreign_key('listings_owner_id_fkey', 'listings', 'owners', ['owner_id'], ['id'], ondelete='CASCADE')
    op.alter_column('listings', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('listings', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('listings', 'status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    op.alter_column('listings', 'url',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('listings', 'processed_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('listings', 'posted_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('listings', 'price',
               existing_type=sa.NUMERIC(),
               nullable=False)
    op.alter_column('listings', 'title',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('listings', 'external_id',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('listings', 'source',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('listings', 'owner_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(None, 'listing_history', type_='foreignkey')
    op.create_foreign_key('listing_history_listing_id_fkey', 'listing_history', 'listings', ['listing_id'], ['id'], ondelete='CASCADE')
    op.alter_column('listing_history', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('listing_history', 'change_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('listing_history', 'changed_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('listing_history', 'price',
               existing_type=sa.NUMERIC(),
               nullable=False)
    op.alter_column('listing_history', 'listing_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###
